// <auto-generated />
using System;
using System.Collections.Generic;
using Gestion_Del_Presupuesto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gestion_Del_Presupuesto.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241008215347_ModeloEntidadGestionPresupuesto")]
    partial class ModeloEntidadGestionPresupuesto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Campo_ClinicoEstudiante", b =>
                {
                    b.Property<int>("Campo_ClinicosId_Campo_Clinico")
                        .HasColumnType("integer");

                    b.Property<int>("EstudiantesId_Estudiante")
                        .HasColumnType("integer");

                    b.HasKey("Campo_ClinicosId_Campo_Clinico", "EstudiantesId_Estudiante");

                    b.HasIndex("EstudiantesId_Estudiante");

                    b.ToTable("Campo_ClinicoEstudiante");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Campo_Clinico", b =>
                {
                    b.Property<int>("Id_Campo_Clinico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Campo_Clinico"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Campo_Clinico");

                    b.ToTable("Campo_Clinicos");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Consolidado_CentroCostoModel", b =>
                {
                    b.Property<int>("Id_PresupuestoXCentroCosto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_PresupuestoXCentroCosto"));

                    b.Property<int>("Anio")
                        .HasColumnType("integer");

                    b.Property<decimal>("CapacitacionRetribucion")
                        .HasColumnType("numeric");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CentroCosto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("CostoMM")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DeudaAnioActual")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DeudaMorosa")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FacturadoAnioActual")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FacturadoAniosAnteriores")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FacturadoCorresponde2024")
                        .HasColumnType("numeric");

                    b.Property<List<string>>("FormasRetribucionSeleccionadas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<decimal>("OtrosGastosRetribucion")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PagoApoyoDocencia")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RRHHRetribucion")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SaldoEstimadoPagarAnioActual")
                        .HasColumnType("numeric");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalDeuda")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalFacturadoPagado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalGastoEstimado")
                        .HasColumnType("numeric");

                    b.HasKey("Id_PresupuestoXCentroCosto");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Convenio", b =>
                {
                    b.Property<int>("Id_Convenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Convenio"));

                    b.Property<int?>("Campo_ClinicoId_Campo_Clinico")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Centro_Costo")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Institucion_Salud")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Presupuesto")
                        .HasColumnType("integer");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Institucion_SaludId_Institucion_Salud")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PresupuestoId_PresupuestoXCentroCosto")
                        .HasColumnType("integer");

                    b.Property<string>("TipoConvenio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Convenio");

                    b.HasIndex("Campo_ClinicoId_Campo_Clinico");

                    b.HasIndex("Institucion_SaludId_Institucion_Salud");

                    b.HasIndex("PresupuestoId_PresupuestoXCentroCosto");

                    b.ToTable("Convenios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Costo", b =>
                {
                    b.Property<int>("Id_Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Costo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Costo");

                    b.HasIndex("Id_Convenio");

                    b.ToTable("Costo");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Devengado", b =>
                {
                    b.Property<int>("Id_Devengado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Devengado"));

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DevengadoId_Devengado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MontoComprometido")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PagosRealizados")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaldoPendiente")
                        .HasColumnType("numeric");

                    b.HasKey("Id_Devengado");

                    b.HasIndex("ConvenioId");

                    b.HasIndex("DevengadoId_Devengado");

                    b.ToTable("Devengados");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Estudiante", b =>
                {
                    b.Property<int>("Id_Estudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Estudiante"));

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ConvenioId_Convenio")
                        .HasColumnType("integer");

                    b.Property<int?>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Estudiante");

                    b.HasIndex("ConvenioId_Convenio");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.FacturacionModel", b =>
                {
                    b.Property<int>("Id_Facturacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Facturacion"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Giro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NivelFormacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroAlumnos")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroTiempo")
                        .HasColumnType("integer");

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceptorDocumento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("numeric");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoReceptor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TiempoPractica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorUF")
                        .HasColumnType("numeric");

                    b.HasKey("Id_Facturacion");

                    b.ToTable("Facturacion");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Historial_Actividad", b =>
                {
                    b.Property<int>("Id_Historial_Actividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Historial_Actividad"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("integer");

                    b.HasKey("Id_Historial_Actividad");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Historial_Actividad");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Institucion_Salud", b =>
                {
                    b.Property<int>("Id_Institucion_Salud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Institucion_Salud"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Institucion_Salud");

                    b.ToTable("InstitucionesSalud");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Pago", b =>
                {
                    b.Property<int>("Id_Pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Pago"));

                    b.Property<int?>("ConvenioId_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Retribucion")
                        .HasColumnType("integer");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RetribucionId_Retribucion")
                        .HasColumnType("integer");

                    b.HasKey("Id_Pago");

                    b.HasIndex("ConvenioId_Convenio");

                    b.HasIndex("Id_Convenio");

                    b.HasIndex("RetribucionId_Retribucion");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Retribucion", b =>
                {
                    b.Property<int>("Id_Retribucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Retribucion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Solicitud_Retribucion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id_Retribucion");

                    b.HasIndex("Id_Convenio");

                    b.HasIndex("Id_Solicitud_Retribucion")
                        .IsUnique();

                    b.ToTable("Retribuciones");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Rol"));

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Permisos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Rol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Solicitud_Retribucion", b =>
                {
                    b.Property<int>("Id_Solicitud_Retribucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Solicitud_Retribucion"));

                    b.Property<int>("ConvenioId_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("Solicitante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Solicitud_Retribucion");

                    b.HasIndex("ConvenioId_Convenio");

                    b.ToTable("SolicitudesRetribucion");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Campo_ClinicoEstudiante", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Campo_Clinico", null)
                        .WithMany()
                        .HasForeignKey("Campo_ClinicosId_Campo_Clinico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.Estudiante", null)
                        .WithMany()
                        .HasForeignKey("EstudiantesId_Estudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Convenio", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Campo_Clinico", null)
                        .WithMany("Convenios")
                        .HasForeignKey("Campo_ClinicoId_Campo_Clinico");

                    b.HasOne("Gestion_Del_Presupuesto.Models.Institucion_Salud", "Institucion_Salud")
                        .WithMany("Convenios")
                        .HasForeignKey("Institucion_SaludId_Institucion_Salud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.Consolidado_CentroCostoModel", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId_PresupuestoXCentroCosto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucion_Salud");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Costo", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Convenio", "Convenio")
                        .WithMany()
                        .HasForeignKey("Id_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Devengado", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Convenio", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.Devengado", null)
                        .WithMany("Devengados")
                        .HasForeignKey("DevengadoId_Devengado");

                    b.Navigation("Convenio");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Estudiante", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Convenio", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Historial_Actividad", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Usuario", "Usuario")
                        .WithMany("Historial_Actividades")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Pago", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Convenio", null)
                        .WithMany("Pagos")
                        .HasForeignKey("ConvenioId_Convenio");

                    b.HasOne("Gestion_Del_Presupuesto.Models.Retribucion", "Convenio")
                        .WithMany("Pagos")
                        .HasForeignKey("Id_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.Retribucion", "Retribucion")
                        .WithMany()
                        .HasForeignKey("RetribucionId_Retribucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("Retribucion");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Retribucion", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Convenio", "Convenio")
                        .WithMany("Retribuciones")
                        .HasForeignKey("Id_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.Solicitud_Retribucion", "Solicitud_Retribucion")
                        .WithOne("Retribucion")
                        .HasForeignKey("Gestion_Del_Presupuesto.Models.Retribucion", "Id_Solicitud_Retribucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("Solicitud_Retribucion");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Solicitud_Retribucion", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Convenio", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Campo_Clinico", b =>
                {
                    b.Navigation("Convenios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Convenio", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Retribuciones");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Devengado", b =>
                {
                    b.Navigation("Devengados");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Institucion_Salud", b =>
                {
                    b.Navigation("Convenios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Retribucion", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Solicitud_Retribucion", b =>
                {
                    b.Navigation("Retribucion")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Usuario", b =>
                {
                    b.Navigation("Historial_Actividades");
                });
#pragma warning restore 612, 618
        }
    }
}
