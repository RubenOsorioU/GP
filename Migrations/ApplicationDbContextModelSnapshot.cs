// <auto-generated />
using System;
using System.Collections.Generic;
using Gestion_Del_Presupuesto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gestion_Del_Presupuesto.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.CentroSaludModel", b =>
                {
                    b.Property<int>("Id_CentroSalud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_CentroSalud"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCentro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RetribucionesId_Retribucion")
                        .HasColumnType("integer");

                    b.Property<int>("Rut_CentrodeSalud")
                        .HasColumnType("integer");

                    b.HasKey("Id_CentroSalud");

                    b.HasIndex("ConvenioId");

                    b.HasIndex("RetribucionesId_Retribucion");

                    b.ToTable("CentrosDeSalud");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.ConvenioModel", b =>
                {
                    b.Property<int>("Id_Convenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Convenio"));

                    b.Property<int>("CentrosDeSaludId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactoPrincipal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EstudianteId_Estudiante")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Fecha_Termino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Retribucion")
                        .HasColumnType("integer");

                    b.Property<int?>("Institucion_SaludId_Institucion_Salud")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("RenovacionAutomatica")
                        .HasColumnType("boolean");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo_Convenio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorUF")
                        .HasColumnType("numeric");

                    b.HasKey("Id_Convenio");

                    b.HasIndex("EstudianteId_Estudiante");

                    b.HasIndex("Institucion_SaludId_Institucion_Salud");

                    b.ToTable("Convenios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Costo", b =>
                {
                    b.Property<int>("Id_Costo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Costo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Costo");

                    b.HasIndex("Id_Convenio");

                    b.ToTable("Costo");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Devengado", b =>
                {
                    b.Property<int>("Id_Devengado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Devengado"));

                    b.Property<int>("CantEstudiantes")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CantidadTiempo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CentroCosto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<int>("CostoUF")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DevengadoId_Devengado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GastoTotalComprometidoMonto")
                        .HasColumnType("numeric");

                    b.Property<string>("Itempresupuestario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ObsvalorUFIndexDateString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PagosRealizados")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaldoPendiente")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalGastoDevengadoGeneradoporEstudiantes")
                        .HasColumnType("numeric");

                    b.Property<int>("ValorUFDevengado")
                        .HasColumnType("integer");

                    b.HasKey("Id_Devengado");

                    b.HasIndex("ConvenioId");

                    b.HasIndex("DevengadoId_Devengado");

                    b.HasIndex("ObsvalorUFIndexDateString");

                    b.ToTable("Devengados");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Estudiante", b =>
                {
                    b.Property<int>("Id_Estudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Estudiante"));

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Estudiante");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.FacturacionModel", b =>
                {
                    b.Property<int>("Id_Facturacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Facturacion"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<int?>("ConveniosId_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaUFDia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Giro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id_IndicadorEco")
                        .HasColumnType("integer");

                    b.Property<int?>("IndicadorId_IndicadorEco")
                        .HasColumnType("integer");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("NetoUF")
                        .HasColumnType("numeric");

                    b.Property<string>("NivelFormacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroAlumnos")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroTiempo")
                        .HasColumnType("integer");

                    b.Property<string>("ObsvalorUFIndexDateString")
                        .HasColumnType("text");

                    b.Property<int?>("PlanillasId_Planillas")
                        .HasColumnType("integer");

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceptorDocumento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("numeric");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoReceptor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TiempoPractica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalEstudiantes")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalaPagar")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUF")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUFMesPractica")
                        .HasColumnType("numeric");

                    b.HasKey("Id_Facturacion");

                    b.HasIndex("ConveniosId_Convenio");

                    b.HasIndex("IndicadorId_IndicadorEco");

                    b.HasIndex("ObsvalorUFIndexDateString");

                    b.HasIndex("PlanillasId_Planillas");

                    b.ToTable("Facturacion");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Historial_Actividad", b =>
                {
                    b.Property<int>("Id_Historial_Actividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Historial_Actividad"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("integer");

                    b.HasKey("Id_Historial_Actividad");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Historial_Actividad");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.IndicadorEconomico", b =>
                {
                    b.Property<int>("Id_IndicadorEco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_IndicadorEco"));

                    b.Property<int>("Codigo")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("SelectedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SeriesId_SeriesData")
                        .HasColumnType("integer");

                    b.HasKey("Id_IndicadorEco");

                    b.HasIndex("SeriesId_SeriesData");

                    b.ToTable("IndicadorEcono");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Institucion_Salud", b =>
                {
                    b.Property<int>("Id_Institucion_Salud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Institucion_Salud"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Institucion_Salud");

                    b.ToTable("InstitucionesSalud");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.ObsData", b =>
                {
                    b.Property<string>("IndexDateString")
                        .HasColumnType("text");

                    b.Property<int?>("SeriesDataId_SeriesData")
                        .HasColumnType("integer");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IndexDateString");

                    b.HasIndex("SeriesDataId_SeriesData");

                    b.ToTable("ObsDatas");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Pago", b =>
                {
                    b.Property<int>("Id_Pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Pago"));

                    b.Property<int>("ConveniosId_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Retribucion")
                        .HasColumnType("integer");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RetribucionesId_Retribucion")
                        .HasColumnType("integer");

                    b.HasKey("Id_Pago");

                    b.HasIndex("ConveniosId_Convenio");

                    b.HasIndex("RetribucionesId_Retribucion");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.PlanillasModel", b =>
                {
                    b.Property<int>("Id_Planillas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Planillas"));

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CantDias")
                        .HasColumnType("integer");

                    b.Property<double>("CantidadHoras")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Fecha_Termino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Estudiante")
                        .HasColumnType("integer");

                    b.Property<string>("Institución")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rut")
                        .HasColumnType("integer");

                    b.HasKey("Id_Planillas");

                    b.HasIndex("Id_Estudiante")
                        .IsUnique();

                    b.ToTable("Planillas");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.PresupuestoModel", b =>
                {
                    b.Property<int>("Id_PresupuestoXCentroCosto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_PresupuestoXCentroCosto"));

                    b.Property<int>("Anio")
                        .HasColumnType("integer");

                    b.Property<decimal>("CapacitacionRetribucion")
                        .HasColumnType("numeric");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CentroCosto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<int?>("ConveniosId_Convenio")
                        .HasColumnType("integer");

                    b.Property<decimal>("CostoMM")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DeudaAnioActual")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DeudaMorosa")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FacturadoAnioActual")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FacturadoAniosAnteriores")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FacturadoCorresponde2024")
                        .HasColumnType("numeric");

                    b.Property<List<string>>("FormasRetribucionSeleccionadas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<decimal>("OtrosGastosRetribucion")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PagoApoyoDocencia")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RRHHRetribucion")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SaldoEstimadoPagarAnioActual")
                        .HasColumnType("numeric");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalDeuda")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalFacturadoPagado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalGastoEstimado")
                        .HasColumnType("numeric");

                    b.HasKey("Id_PresupuestoXCentroCosto");

                    b.HasIndex("ConveniosId_Convenio");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.ProvisionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<string>("NombreCampoClinico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreSede")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("TipoGasto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Provision");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.RetribucionModel", b =>
                {
                    b.Property<int>("Id_Retribucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Retribucion"));

                    b.Property<decimal>("CantPesos")
                        .HasColumnType("numeric");

                    b.Property<int>("ConvenioId")
                        .HasColumnType("integer");

                    b.Property<string>("DetalleOtrosGastos")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaRetribucion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<string>("Periodo")
                        .HasColumnType("text");

                    b.Property<string>("Tipo_Retribucion")
                        .HasColumnType("text");

                    b.Property<decimal>("UFTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id_Retribucion");

                    b.HasIndex("ConvenioId");

                    b.ToTable("Retribuciones");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Rol", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Rol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Permisos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.SeriesData", b =>
                {
                    b.Property<int>("Id_SeriesData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_SeriesData"));

                    b.Property<string>("DescripEsp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescripIng")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeriesId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_SeriesData");

                    b.ToTable("SerieDatas");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Solicitud_Retribucion", b =>
                {
                    b.Property<int>("Id_Solicitud_Retribucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Solicitud_Retribucion"));

                    b.Property<int>("ConvenioId_Convenio")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id_Convenio")
                        .HasColumnType("integer");

                    b.Property<int>("RetribucionId_Retribucion")
                        .HasColumnType("integer");

                    b.Property<string>("Solicitante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Solicitud_Retribucion");

                    b.HasIndex("ConvenioId_Convenio");

                    b.HasIndex("RetribucionId_Retribucion");

                    b.ToTable("SolicitudesRetribucion");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("Id_Rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.CentroSaludModel", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenios")
                        .WithMany("CentrosDeSalud")
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.RetribucionModel", "Retribuciones")
                        .WithMany()
                        .HasForeignKey("RetribucionesId_Retribucion");

                    b.Navigation("Convenios");

                    b.Navigation("Retribuciones");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.ConvenioModel", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Estudiante", null)
                        .WithMany("Convenio")
                        .HasForeignKey("EstudianteId_Estudiante");

                    b.HasOne("Gestion_Del_Presupuesto.Models.Institucion_Salud", null)
                        .WithMany("Convenios")
                        .HasForeignKey("Institucion_SaludId_Institucion_Salud");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Costo", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenio")
                        .WithMany()
                        .HasForeignKey("Id_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Devengado", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.Devengado", null)
                        .WithMany("Devengados")
                        .HasForeignKey("DevengadoId_Devengado");

                    b.HasOne("Gestion_Del_Presupuesto.Models.ObsData", "ObsvalorUF")
                        .WithMany()
                        .HasForeignKey("ObsvalorUFIndexDateString")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("ObsvalorUF");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.FacturacionModel", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenios")
                        .WithMany()
                        .HasForeignKey("ConveniosId_Convenio");

                    b.HasOne("Gestion_Del_Presupuesto.Models.IndicadorEconomico", "Indicador")
                        .WithMany()
                        .HasForeignKey("IndicadorId_IndicadorEco");

                    b.HasOne("Gestion_Del_Presupuesto.Models.ObsData", "ObsvalorUF")
                        .WithMany()
                        .HasForeignKey("ObsvalorUFIndexDateString");

                    b.HasOne("Gestion_Del_Presupuesto.Models.PlanillasModel", "Planillas")
                        .WithMany()
                        .HasForeignKey("PlanillasId_Planillas");

                    b.Navigation("Convenios");

                    b.Navigation("Indicador");

                    b.Navigation("ObsvalorUF");

                    b.Navigation("Planillas");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Historial_Actividad", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Usuario", "Usuarios")
                        .WithMany("Historial_Actividades")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.IndicadorEconomico", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.SeriesData", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId_SeriesData")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.ObsData", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.SeriesData", null)
                        .WithMany("Obs")
                        .HasForeignKey("SeriesDataId_SeriesData");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Pago", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenios")
                        .WithMany()
                        .HasForeignKey("ConveniosId_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.RetribucionModel", "Retribuciones")
                        .WithMany()
                        .HasForeignKey("RetribucionesId_Retribucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenios");

                    b.Navigation("Retribuciones");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.PlanillasModel", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Estudiante", "Estudiante")
                        .WithOne("Planilla")
                        .HasForeignKey("Gestion_Del_Presupuesto.Models.PlanillasModel", "Id_Estudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.PresupuestoModel", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenios")
                        .WithMany()
                        .HasForeignKey("ConveniosId_Convenio");

                    b.Navigation("Convenios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.RetribucionModel", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenios")
                        .WithMany("Retribuciones")
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Solicitud_Retribucion", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.ConvenioModel", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId_Convenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Del_Presupuesto.Models.RetribucionModel", "Retribucion")
                        .WithMany()
                        .HasForeignKey("RetribucionId_Retribucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("Retribucion");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Usuario", b =>
                {
                    b.HasOne("Gestion_Del_Presupuesto.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.ConvenioModel", b =>
                {
                    b.Navigation("CentrosDeSalud");

                    b.Navigation("Retribuciones");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Devengado", b =>
                {
                    b.Navigation("Devengados");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Estudiante", b =>
                {
                    b.Navigation("Convenio");

                    b.Navigation("Planilla")
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Institucion_Salud", b =>
                {
                    b.Navigation("Convenios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.SeriesData", b =>
                {
                    b.Navigation("Obs");
                });

            modelBuilder.Entity("Gestion_Del_Presupuesto.Models.Usuario", b =>
                {
                    b.Navigation("Historial_Actividades");
                });
#pragma warning restore 612, 618
        }
    }
}
